* visualizing org-brain relationships using EAF



/currently rewriting most code for easier access (switching from graph-tool no networkx, testing additional communication interfaces) -> stuff is probably broken/

** Requirements
- [[https://github.com/Kungsgeten/org-brain][org-brain]]
- [[https://github.com/manateelazycat/emacs-application-framework/][EAF]] (some programs in EAF don't run for me, but that doesn't seem to be a problem)
- [[https://graph-tool.skewed.de][graph-tool]] (unlike graphviz, it allows to start layout calculations from predefined coordinates, which results in relatively little node re-arrangement)
- some other python libs


** Installation:
- create folder emacs-application-framework/app/obr-test, copy/symlink (=buffer.py=) there
- load the (=obr-viz.el=) functions/variables (it's not really a package yet)

** Usage:
- in org-brain, pin/unpin nodes whose links are of interest
- run obr-viz (bound to =G=) to load the links into =eaf-var-list=
  (visualization does not work if =eaf-var-list= has no links)
- run =M-x eaf-obr-test= to start the python process that visualizes the links in a EAF window thingy
- when updating the links by pinning/unpinning or adding/removing children/friends, update the visualization with obr-viz (=G=)
- generate a new layout with obr-viz-redraw (=R=)


** Particularities/Limitations:
- edges of children of pins are visualized as well
- parent-child relationships are visualized unless the parent starts with "cls_" (class)
- only annotated edges are visualized; this allows to use directed edges by default
- updates to the visualization have to be manually triggered
- selection through pins seems a bit wonky, may be switched to categories/query language/something else
- if the network does not constitute a component, the individual components are pushed strongly apart by the layout algorithm

*Disclaimer*: This is the first time I'm trying to develop something like an application, as well as using Elisp and GUIs.


** Example: Twin Peaks character relations based on some episodes of S1

[[file:demo/obr2.gif]]

